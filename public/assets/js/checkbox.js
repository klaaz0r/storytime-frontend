!function(e){var t=function(e,t){this.init(e,t)};t.prototype={constructor:t,init:function(t,c){var o=this.$element=e(t);this.options=e.extend({},e.fn.checkbox.defaults,c),o.before(this.options.template),this.setState()},setState:function(){var e=this.$element,t=e.closest(".checkbox");e.prop("disabled")&&t.addClass("disabled"),e.prop("checked")&&t.addClass("checked")},toggle:function(){var t="checked",c=this.$element,o=c.closest(".checkbox"),n=c.prop(t),s=e.Event("toggle");0==c.prop("disabled")&&(o.toggleClass(t)&&n?c.removeAttr(t):c.prop(t,t),c.trigger(s).trigger("change"))},setCheck:function(t){var c="checked",o=this.$element,n=o.closest(".checkbox"),s="check"==t,a=e.Event(t);n[s?"addClass":"removeClass"](c)&&s?o.prop(c,c):o.removeAttr(c),o.trigger(a).trigger("change")}};var c=e.fn.checkbox;e.fn.checkbox=function(c){return this.each(function(){var o=e(this),n=o.data("checkbox"),s=e.extend({},e.fn.checkbox.defaults,o.data(),"object"==typeof c&&c);n||o.data("checkbox",n=new t(this,s)),"toggle"==c&&n.toggle(),"check"==c||"uncheck"==c?n.setCheck(c):c&&n.setState()})},e.fn.checkbox.defaults={template:'<span class="icons"><span class="first-icon"></span><span class="second-icon ss-check"></span></span>'},e.fn.checkbox.noConflict=function(){return e.fn.checkbox=c,this},e(document).on("click.checkbox.data-api","[data-toggle^=checkbox], .checkbox",function(t){var c=e(t.target);"A"!=t.target.tagName&&(t&&t.preventDefault()&&t.stopPropagation(),c.hasClass("checkbox")||(c=c.closest(".checkbox")),c.find(":checkbox").checkbox("toggle"))}),e(function(){e('[data-toggle="checkbox"]').each(function(){var t=e(this);t.checkbox()})})}(window.jQuery);